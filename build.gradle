plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '3.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation group: 'org.springframework', name: 'spring-core', version: '6.0.9'
    implementation group: 'org.springframework', name: 'spring-context', version: '6.0.9'
    implementation group: 'org.springframework.boot', name: 'spring-boot', version: '3.0.6'
    implementation group: 'org.springframework', name: 'spring-web', version: '6.0.9'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '3.0.6'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-websocket', version: '3.0.6'
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '3.0.6'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'
    implementation group: 'com.h2database', name: 'h2', version: '2.1.214'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.6.0'
    implementation group: 'org.springframework.security', name: 'spring-security-web', version: '6.1.0'
    implementation group: 'org.springframework.security', name: 'spring-security-config', version: '6.1.0'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-gson', version: '0.11.5'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.6'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '3.1.0'
}

test {
    useJUnitPlatform()
}

import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

tasks.withType(Test) {
    testLogging {
        // set options for log level LIFECYCLE
        events TestLogEvent.FAILED,
                TestLogEvent.PASSED,
                TestLogEvent.SKIPPED,
                TestLogEvent.STANDARD_OUT
        exceptionFormat TestExceptionFormat.FULL
        showExceptions true
        showCauses true
        showStackTraces true

        // set options for log level DEBUG and INFO
        debug {
            events TestLogEvent.STARTED,
                    TestLogEvent.FAILED,
                    TestLogEvent.PASSED,
                    TestLogEvent.SKIPPED,
                    TestLogEvent.STANDARD_ERROR,
                    TestLogEvent.STANDARD_OUT
            exceptionFormat TestExceptionFormat.FULL
        }
        info.events = debug.events
        info.exceptionFormat = debug.exceptionFormat

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} passed, ${result.failedTestCount} failed, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}
